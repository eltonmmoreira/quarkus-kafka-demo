version: '3.7'

services:

  postgres:
    container_name: postgres-assets
    ports:
      - "5432:5432"
    image: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - /Users/eltonmmoreira/volumes/pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=postgres

  postgres-balance:
    container_name: postgres-balance
    ports:
      - "5433:5432"
    image: postgres
    volumes:
      - ./init-balance.sql:/docker-entrypoint-initdb.d/init.sql
      - /Users/eltonmmoreira/volumes/pgdata-balance:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=postgres

  zookeeper:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    container_name: zookeeper-assets
    command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    container_name: kafka-assets
    command: [
        "sh", "-c",
        "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-assets:2181